{
    "appid": "5edeb283-48d7-477a-b887-af97c077122c",
    "name": "Box",
    "description": "Amgen Box integration",
    "type": "information",
    "product_vendor": "Amgen Box",
    "logo": "box.png",
    "logo_dark": "box_dark.png",
    "product_name": "Amgen Box",
    "python_version": "3",
    "product_version_regex": ".*",
    "publisher": "Amgen Box",
    "license": "Copyright (c) Amgen Box, 2020",
    "app_version": "1.1.0",
    "utctime_updated": "2020-10-16T10:59:08.557881Z",
    "package_name": "phantom_box",
    "main_module": "box_connector.py",
    "min_phantom_version": "4.9.33153",
    "app_wizard_version": "1.0.0",
    "configuration": {
        "client_id": {
            "description": "Client ID",
            "data_type": "string",
            "required": true,
            "value_list": [],
            "default": "",
            "order": 0
        },
        "client_secret": {
            "description": "Client Secret",
            "data_type": "password",
            "required": true,
            "order": 1
        },
        "initial_token": {
            "description": "Initial Token",
            "data_type": "password",
            "required": true,
            "order": 2
        },
        "initial_refresh_token": {
            "description": "Initial Refresh Token",
            "data_type": "password",
            "required": true,
            "order": 3
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "verbose": "",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "refresh_token",
            "identifier": "refresh_token",
            "description": "refresh_token",
            "verbose": "Refresh the box token in Python Keyring. The refresh token expires in 60 days if not used. This action should be used in another playbook with a cronjob to avoid auth token expiration.",
            "type": "generic",
            "read_only": false,
            "parameters": {},
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "upload_file",
            "identifier": "upload_file",
            "description": "upload_file",
            "verbose": "Upload a file to a specified folder in box",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "vault_id": {
                    "description": "Phantom vault id",
                    "data_type": "string",
                    "required": true,
                    "primary": false,
                    "contains": [
                        "vault id"
                    ],
                    "value_list": [],
                    "default": "",
                    "order": 0
                },
                "box_folder_id": {
                    "description": "Box folder id",
                    "data_type": "string",
                    "required": true,
                    "primary": false,
                    "contains": [
                        "box folder id"
                    ],
                    "value_list": [],
                    "default": "",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.vault_id",
                    "data_type": "string",
                    "contains": [
                        "vault id"
                    ],
                    "column_name": "vault_id",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.box_folder_id",
                    "data_type": "string",
                    "contains": [
                        "box folder id"
                    ],
                    "column_name": "box_folder_id",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "create_folder",
            "identifier": "create_folder",
            "description": "create_folder",
            "verbose": "Creates a folder under the specified root folder.",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "folder_name": {
                    "description": "Folder Name to be created in box",
                    "data_type": "string",
                    "required": true,
                    "primary": false,
                    "contains": [
                        "folder name"
                    ],
                    "value_list": [],
                    "default": "",
                    "order": 0
                },
                "root_folder_id": {
                    "description": "Root folder id",
                    "data_type": "string",
                    "required": true,
                    "primary": false,
                    "contains": [
                        "folder id"
                    ],
                    "value_list": [],
                    "default": "",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ]
}